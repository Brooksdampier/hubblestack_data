# Sample masking for documentation. Please see nebula_osquery.py for more
# documentation
#
# Pattern that will replace whatever is masked
mask_with: '***masked*by*hubble***'

# Target and mask strings based on regex patterns
# Can limit search specific queries and columns
#blacklisted_strings:
#    - query_name: 'running_procs'  # Name of the osquery to be masked.
#                                   # Put '*' to match all queries. Note
#                                   # that query_name doesn't support
#                                   # full globbing. '*' is just given
#                                   # special treatment.
#      column: 'command_line'  # Column name in the osquery to be masked. No regex or glob support
#      # See below for documentation of these blacklisted patterns
#      blacklisted_patterns:
#          - '(prefix)(password)(suffix)'

# Some osquery results are formed as lists of dicts. We can mask
# based on variable names within these dicts.
#blacklisted_objects:
#
#    - query_name: 'running_procs'  # Name of the osquery to be masked.
#                                   # Put '*' to match all queries. Note
#                                   # that query_name doesn't support
#                                   # full globbing. '*' is just given
#                                   # special treatment.
#      column: 'environment'  # Column name in the osquery to be masked. No regex or glob support
#      attribute_to_check: 'value' # In the inner dict, this is the key
#                                  # to check for blacklisted_patterns
#      attributes_to_mask: # Values under these keys in the dict will be
#        - 'env_var_name'  # masked, assuming one of the blacklisted_patterns
#                          # is found under attribute_to_check in the same dict
#      blacklisted_patterns:  # Strings to look for under attribute_to_check. No regex support.
#        - 'ETCDCTL_READ_PASSWORD'
#        - 'ETCDCTL_WRITE_PASSWORD'
